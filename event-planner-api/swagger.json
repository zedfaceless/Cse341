{
  "openapi": "3.0.0",
  "info": {
    "title": "Event Planner API",
    "version": "1.0.0",
    "description": "API for managing events and users"
  },
  "servers": [
    {
      "url": "https://cse341-wpg0.onrender.com"
    }
  ],
  "paths": {
    "/api/events": {
      "get": {
        "summary": "Get all events",
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "List of all events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Event" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new event",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventCreate" },
              "example": {
                "title": "Community Cleanup",
                "description": "Neighborhood park cleanup",
                "startDate": "2025-10-15T09:00:00Z",
                "endDate": "2025-10-15T12:00:00Z",
                "venue": "Riverside Park",
                "organizer": "GreenGroup",
                "capacity": 100
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Event created successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Event" } } } },
          "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "summary": "Get event by ID",
        "tags": ["Events"],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Event found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Event" } } } },
          "404": { "description": "Event not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "put": {
        "summary": "Update event by ID",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventCreate" }
            }
          }
        },
        "responses": {
          "200": { "description": "Event updated successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Event" } } } },
          "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Event not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "delete": {
        "summary": "Delete event by ID",
        "tags": ["Events"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "Event deleted successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" } } } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "Event not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "responses": {
          "200": { "description": "List of all users", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/User" } } } } }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" },
              "example": {
                "username": "janedoe",
                "email": "jane@example.com",
                "password": "P@ssw0rd",
                "firstName": "Jane",
                "lastName": "Doe"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } },
          "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["Users"],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "User found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } },
          "404": { "description": "User not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "put": {
        "summary": "Update user by ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } },
          "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "User not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": {
          "200": { "description": "User deleted successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" } } } } } },
          "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } },
          "404": { "description": "User not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Local login - returns JWT",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "jane@example.com",
                "password": "P@ssw0rd"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful - returns token", "content": { "application/json": { "schema": { "type": "object", "properties": { "token": { "type": "string" } } } } } },
          "401": { "description": "Invalid credentials", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Event": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "venue": { "type": "string" },
          "organizer": { "type": "string" },
          "capacity": { "type": "integer" },
          "createdBy": { "type": "object", "properties": { "username": { "type": "string" }, "email": { "type": "string" } } },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "EventCreate": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "venue": { "type": "string" },
          "organizer": { "type": "string" },
          "capacity": { "type": "integer" }
        },
        "required": ["title", "startDate", "endDate", "venue", "organizer", "capacity"]
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "role": { "type": "string", "enum": ["admin", "user"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" }
        },
        "required": ["username", "email", "password"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      }
    }
  }
}
